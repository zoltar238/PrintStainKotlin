import kotlin.Boolean;

CREATE TABLE Item (
    itemId INTEGER PRIMARY KEY,
    name TEXT,
    description TEXT,
    postDate TEXT,
    fileStructure TEXT,
    timesUploaded INTEGER DEFAULT 0,
    personId INTEGER,
    archived INTEGER AS Boolean NOT NULL DEFAULT 0,
    FOREIGN KEY (personId) REFERENCES Person(personId)
);

-- Update fileStructure
updateFileStructure:
UPDATE Item
SET fileStructure = ?
WHERE itemId = ?;


-- Get item with all its relations
selectAllItemWithRelations:
SELECT
    i.*,
    p.personId AS personPersonId,
    p.name AS personName,
    p.isActive AS personIsActive,
    img.imageId AS imageId,
    img.base64Image AS imageData,
    s.saleId AS sale_saleId,
    s.price AS sale_price,
    s.date AS sale_date,
    s.cost AS sale_cost,
    s.status AS sale_status
FROM Item i
LEFT JOIN Person p ON i.personId = p.personId
LEFT JOIN Image img ON img.item_id = i.itemId
LEFT JOIN Sale s ON s.itemId = i.itemId;

-- Get item by ID
selectItemById:
SELECT
    i.*
FROM Item i
WHERE i.itemId = ?;

-- Get all items
selectAllItems:
SELECT * FROM Item;

-- Get all images from an item
selectImagesForItem:
SELECT * FROM Image WHERE item_id = ?;

-- Insert new item or replace it
insertItem:
INSERT OR REPLACE INTO Item(
    itemId,
    name,
    description,
    postDate,
    fileStructure,
    timesUploaded,
    personId
) VALUES (?, ?, ?, ?, ?, ?, ?);

-- Update an item
updateItem:
UPDATE Item
SET name = ?,
    description = ?,
    postDate = ?,
    timesUploaded = ?,
    personId = ?
WHERE itemId = ?;

-- Delete an item
deleteItem:
DELETE FROM Item WHERE itemId = ?;